# -*- coding: utf-8 -*-
"""
Created on Mon Jun 11 13:33:04 2018

@author: hzs10639
"""


from __future__ import division
import sys
sys.path.append('C:\\lib')
from chen_model import *
import gzip,os,urllib,urllib2,cookielib,getpass,time,datetime,base64,sys,shutil,re,glob,time

urllib.getproxies_registry = lambda : {}
cj = cookielib.CookieJar()
opener=urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))  
opener.addheaders = [('User-agent', 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)')]
urllib2.install_opener(opener)


a={}#觉醒果实 
b={}
c={}
dict={}
def initialize_dict_reason(dict):
    dict={
    '0':0,
    'accept_merc_task': 0,
    'awake_soul_hunter_level': 0,
    'bail_gold': 0,
    'breakout_soul_hunter_level': 0,
    'buy': 0,
    'buy_eg_tip': 0,
    'buy_farm_seed': 0,
    'convert_weapon_exp': 0,
    'create': 0,
    'create_metallurgy_oil:': 0,
    'dig_contest_task': 0,
    'draw_stall_sell': 0,
    'enter_dungeon': 0,
    'evolve': 0,
    'forge': 0,
    'gift': 0,
    'gm': 0,
    'hunt_tickets_buy': 0,
    'lose': 0,
    'mail': 0,
    'mutex_task_first_break':0,
    'open_treasure_box': 0,
    'payback_silver_dept_auto': 0,
    'precision_cast': 0,
    'quench_equip_request': 0,
    'recommend_store_buy': 0,
    'rune_upgrade': 0,
    'special_dun_restore': 0,
    'stall_buy': 0,
    'stall_buy_fail': 0,
    'stall_delay_fzp': 0,
    'stall_resell': 0,
    'stall_sell': 0,
    'stall_sell_delay_deduct': 0,
    'survey': 0,
    'task_reward': 0,
    'task_rewJan': 0,
    'task_rewarJan':0,
    'transform': 0,
    'unlock': 0,
    'upgrade_endless_skill': 0,
    'upgrade_soul_hunter_level': 0,
    'us': 0
    }
    return dict
    
reason=initialize_dict_reason(dict)#变化原因
reason_count=initialize_dict_reason(dict)#变化原因 总额

file_price=[]
file_count=[]
file_sum_price=[]

item_count=[]
item_time=[]
item_avg_price=[]
item_sum_price=[]

#w=open('output_fruit_itembuy_20180608.txt','w+')
file_all=glob.glob('201*')
file_all.sort()
print (file_all)

w=open('count_dict_2.csv','w+')
w.write('date,')
for key in reason_count.keys() :
    w.write('%s,'%key)
w.write('\n')

for files in file_all:
    file_date=files[0:8]
    if file_date > '20180310' : continue
    if files.endswith('log'):
        f=open(files,'rb')
    else:
        f=gzip.open(files,'rb')
    for line in f:
        try:
            f_role_name=GetWords(line,'"role_name": ',',')
            f_price=int(GetWords(line,'"price": ',','))
            f_h_price=int(GetWords(line,'"h_price": ',','))
            f_time=GetWords(line,'[',']')
            try:
                f_count=int(GetWords(line,'"count": ',','))
            except:
                f_count=int(GetWords(line,'"count": ','J'))
            
            f_a_gold=int(GetWords(line,'"a_gold": ',','))
            #"b_gold": 108}Jan 18 18:03:46 h37-gm-10002
            '''
            try:
                f_b_gold=int(GetWords(line,'"b_gold": ',','))
            except:
                try:                    
                    f_b_gold=int(GetWords(line,'"b_gold": ','}'))
                except:
                    f_b_gold=int(GetWords(line,'"b_gold": 'J'}'))
            '''
            f_role_level=int(GetWords(line,'"role_level": "',','))
            f_reason=GetWords(line,'"reason": "','",').split(" ")[0]
            
            if f_reason in reason:
                reason[f_reason]=reason[f_reason]+1
                reason_count[f_reason]=reason_count[f_reason]+f_count
            else:
                reason[f_reason]=1
                reason_count[f_reason]=f_count
                print "f_reason error",line
        except:
            print "line error",line
    
    
    item_time.append(file_date)
    w.write('%s,'%file_date)
    for values in reason_count.values():
        w.write('%s,'%values)
    w.write('\n')
    print file_date,reason_count
    #重新初始化
    reason=initialize_dict_reason(dict)
    reason_count=initialize_dict_reason(dict)
    f.close()




'''
print item_time,item_avg_price,item_sum_price
import pandas as pd
df = pd.DataFrame({'item_time':item_time,'item_avg_price':item_avg_price,'item_sum_price':item_sum_price})
cols=('item_time','item_avg_price','item_sum_price')
df = df.ix[:, cols]
df.to_csv("general_full_v2.csv",index=False,sep=',')
'''
